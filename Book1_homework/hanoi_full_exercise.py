# 注意：発展問題です。関数の再帰呼び出しを練習することができます。
# 取り組む場合は、まずhanoi_1_homework.pyを完了させてからが良いでしょう。

# 【 ハノイの塔 】
# 3本の杭A,B,Cがある。最初Aに円盤が、大きいものが下になるように積まれている。
# 円盤を順序を大きいものが下になるように常に保ちつつ、AからCに移動する。
# 〜　ヒント　〜
# 全ての円盤がn個の時、
# (1) 上から n - 1 個目までの円盤を「何らかの方法」でAからBに移動する。
# (2) 残った1枚をAからCに移動する。
# (3) Bにある円盤を「何らかの方法」でBからCに移動する。
#  | ここで、(1)は最初Aに n - 1 個の円盤があり、Bにすべての円盤を移動させるという問題ととらえることができる。
#  | そこで、次のようにする。
# (1) 上から n - 2 個目までの円盤を「何らかの方法」でAからCに移動する。
# (2) 残った1枚をAからBに移動する。
# (3) Cにある円盤を「何らかの方法」でCからBに移動する。
#  | (3)も同様にして行うことができ、『何らかの方法』の部分を分解していくと解ける。
# 参照元：https://ja.wikipedia.org/wiki/ハノイの塔

# リストの右側を杭の上側に見立てること。
# より大きい数字をより大きい円盤に見立てること。
